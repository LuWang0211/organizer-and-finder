generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

model user {
  id              Int     @id @default(autoincrement())
  email           String  @unique
  wechatId        String?
  phone           String?
  username        String  @unique
  password        String
  familyId        Int?
  accountProvider String
  name            String
  family          family? @relation(fields: [familyId], references: [id])
}

model family {
  id    Int    @id @default(autoincrement())
  name  String
  rooms room[]
  users user[]
  house house[]
  locations location[]
}

model house {
  id      Int     @id @default(autoincrement())
  name    String
  metadata Json?
  familyId        Int
  family          family @relation(fields: [familyId], references: [id])

  rooms room[]
}

model room {
  id        String  @id @db.VarChar(255)
  name      String
  familyId  Int
  locations location[]
  family    family     @relation(fields: [familyId], references: [id])
  metadata Json?

  houseId Int
  house   house @relation(fields: [houseId], references: [id])
}

model location {
  id     String    @id @db.VarChar(255)
  name   String    @db.VarChar(255)
  roomId String
  items  item[]
  room   room      @relation(fields: [roomId], references: [id])
  familyId Int     @default(1)
  family  family?  @relation(fields: [familyId], references: [id])
  iconKey String?  @db.VarChar(64)
}

model item {
  id            Int       @id @default(autoincrement())
  name          String    @db.VarChar(255)
  locationid    String?
  quantity      Int?      @default(0)
  inotherobject Boolean?  @default(false)
  otherobjectid Int?
  location      location? @relation(fields: [locationid], references: [id], onUpdate: Cascade)
  iconKey       String?   @db.VarChar(64)
}
